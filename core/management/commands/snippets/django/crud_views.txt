
# Views do Models $ModelClass$
class $ModelClass$ListView(BaseListView):
    """Classe para gerenciar a listagem do $ModelClass$"""
    model = $ModelClass$
    template_name = "$app_name$/$model_name$_list.html"
    context_object_name = '$model_name$'
    $ListFields$

    def get_context_data(self, **kwargs):
        context = super($ModelClass$ListView, self).get_context_data(**kwargs)
        return context
    
    def get_queryset(self):
        """Subscrevendo o queryset para
        filtrar os dados conforme o perfil logado
        
        Returns:
            QuerySet
        """

        queryset = super($ModelClass$ListView, self).get_queryset()
        if self.request.user.is_superuser:
            return queryset
        else:
            # queryset.filter()
            return queryset


class $ModelClass$DetailView(BaseDetailView):
    """Classe para gerenciar o detalhe do $ModelClass$ """
    model = $ModelClass$
    form_class = $ModelClass$Form
    success_url = "$app_name$:$model_name$-list"
    template_name = '$app_name$/$model_name$_detail.html'
    context_object_name = '$model_name$'

    def get_context_data(self, **kwargs):
        context = super($ModelClass$DetailView, self).get_context_data(**kwargs)
        return context

    """ Caso deseje controlar o acesso do usuário ao detalhamento
     do item descomente esse método """

    #def dispatch(self, request, *args, **kwargs):
    #    """ Método para verificar se o usuário 
    #    tem permissão de detalhar o item
    #    """

    #    # Recuperando o objeto
    #    obj = self.get_object()
    #    if (self.request.user.is_superuser):
    #        return super($ModelClass$DetailView, self).dispatch(
    #            request, * args, **kwargs)

    #    # Informando que o usuário não tem permissão de acesso
    #    messages.add_message(request, messages.WARNING,
    #        'Você não tem permissão para visualizar esse registro.')
    #    # Redirecionando o usuário para tela de listagem
    #    return redirect("$app_name$:$model_name$-list")


class $ModelClass$CreateView(BaseCreateView):
    """Classe para gerenciar a criação do $ModelClass$ """
    model = $ModelClass$
    form_class = $ModelClass$Form
    context_object_name = '$model_name$'
    success_url = "$app_name$:$model_name$-list"
    template_name = '$app_name$/$model_name$_create.html'
    #inlines = []

    $FormsModalCreate$


class $ModelClass$UpdateView(BaseUpdateView):
    """Classe para gerenciar a atualização do $ModelClass$ """
    model = $ModelClass$
    form_class = $ModelClass$Form
    context_object_name = '$model_name$'
    success_url = "$app_name$:$model_name$-list"
    template_name = '$app_name$/$model_name$_update.html'
    #inlines = []

    """ Caso seja necessário controlar o acesso do usuário a edição
     do item descomente esse método """

    #def dispatch(self, request, *args, **kwargs):
    #    """ Método para verificar se o usuário 
    #    tem permissão de detalhar o item
    #    """

    #    #Recuperando o objeto
    #    obj = self.get_object()
    #    if (self.request.user.is_superuser):
    #        return super($ModelClass$UpdateView, self).dispatch(
    #            request, * args, **kwargs)

    #    # Informando que o usuário não tem permissão de acesso
    #    messages.add_message(request, messages.WARNING,
    #        'Você não tem permissão para editar esse registro.')
    #    # Redirecionando o usuário para tela de listagem
    #    return redirect("$app_name$:$model_name$-list")

    $FormsModalUpdate$


class $ModelClass$DeleteView(BaseDeleteView):
    """Classe para gerenciar a exclusão do $ModelClass$ """
    model = $ModelClass$
    form_class = $ModelClass$Form
    context_object_name = '$model_name$'
    success_url = "$app_name$:$model_name$-list"
    template_name = '$app_name$/$model_name$_delete.html'

    """ Caso seja necessário controlar o acesso do usuário a edição
     do item descomente esse método """

    #def dispatch(self, request, *args, **kwargs):
    #    """ Método para verificar se o usuário 
    #    tem permissão de detalhar o item
    #    """

    #    # Recuperando o objeto
    #    obj = self.get_object()
    #    if (self.request.user.is_superuser):
    #        return super($ModelClass$DeleteView, self).dispatch(
    #            request, * args, **kwargs)

    #    # Informando que o usuário não tem permissão de acesso
    #    messages.add_message(request, messages.WARNING,
    #        'Você não tem permissão para excluir esse registro.')
    #    # Redirecionando o usuário para tela de listagem
    #    return redirect("$app_name$:$model_name$-list")


# Fim das Views do Models $ModelClass$
